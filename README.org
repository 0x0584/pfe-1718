# ###########################
# # Org-mode version 9.1.5 ##
# # Emacs version 25.2.2   ##
# ###########################

#+DATE: 05/12/2018
# #+TITLE: Rapport de stage
#+AUTHOR: Anas Rchid
#+EMAIL: rchid.anas@gmail.com
#+LANGUAGE: fr

#+OPTIONS: toc:nil
#+LaTex_CLASS: report
#+LaTeX_CLASS_OPTIONS: [12pt,a4paper,twoside]
#+LATEX_HEADER: \usepackage[AUTO]{babel}
#+LATEX_HEADER: \usepackage[margin=1.20in]{geometry}
#+LaTeX_HEADER: \hypersetup {
#+LaTeX_HEADER:     colorlinks,
#+LaTeX_HEADER:     citecolor=black,
#+LaTeX_HEADER:     filecolor=black,
#+LaTeX_HEADER:     linkcolor=blue,
#+LaTeX_HEADER:     urlcolor=blue
#+LaTeX_HEADER: }
#+LaTeX_HEADER: \usemintedstyle{friendly}
# [[./front.pdf]]
#+LaTeX_HEADER: \usepackage{fancyhdr}
#+LaTeX_HEADER: \pagestyle{fancy}
#+LaTeX_HEADER: \fancyhf{}
#+LaTeX_HEADER: \fancyhead[L]{\rightmark}
#+LaTeX_HEADER: \fancyhead[R]{\thepage}

#+LATEX_COMPILER: pdflatex
#+LATEX: \tableofcontents
#+LATEX: \listoffigures
#+LATEX: \listoflistings

#+BEGIN_EXPORT latex
\begin{abstract}
Ce projet et la résulta d'un stage que j'avais passe chez la Faculté des Lettres et Science Humaines, El Jadida sous le theme Informatision du service Resourse Humains. Sous l'encadrement  de Mr. A. Madani, et la supervision du chef de service; Mr. Driss Dibaji. 
\end{abstract}
#+END_EXPORT

* Intoduction
  \vspace*{\fill}
  #+BEGIN_QUOTE  
  Pour obtenir ce besoin, J'avais la responsabilité de développé un environnement pour gérer les différents taches décris en [[Cahier des Charges][cahier des charges]]\\
  #+END_QUOTE

  #+BEGIN_QUOTE
  Pour realise , il y a deux parties. Stockage des données et l'application bureau. Pour la première, J'ai choisi /XML/ tout simplement parce qu'il est gratuit, alors c'est un langage markup écrit dans un fichier texte, ainsi que la simplicité d’utilisation et modification. Et pour la deuxième, j'ai développé une application en /Java/, par ce qu'il est un langage Oriente-Objet, donc il facilite le processus de développement.
  #+END_QUOTE

  \vspace*{\fill}
  
* Cahier des Charges
  
  \vspace*{\fill}
  #+BEGIN_QUOTE
  D'après le nom, /Service des ressources humains/, est le service est responsable de la gestion des employées et fonctionnaires, leur diplômes et grades, ainsi que donner des attestations du travail et des autorisation de congé, suivi d'absence, rémunération du travail les jours fériés finalement une notation annuelle.\\
  #+END_QUOTE

  Donc, en déduire que le /cahier des charges/ est le suivant :\\

  + implémenter un système de gestion des employées/fonctionnaires
  + gérée les diplômes et les grades
  + suivi des grades
  + suivi d'absence
  + suivi de rémunération du travail les fériés
  + générée des attestations de travail
  + générée des autorisations de congé
  + générée des notations annuelle pour 
  \vspace*{\fill}  

* Conception
** Stockage des données en XML
      Les données sont stockées dans un fichier =XML=, =data/xml/hr.xml=. La raison de choisir ce type de stockage c'est que il est lisible soit au niveau du machine soit au niveau d'humain. Au suivant, les regles du gestion est schema general du fichier.

*** Règles de gestion du fichier =XML=
    Le root-tag est =<Employee>= est qui contient plusieurs tags de type =<employee>= qui représente des employées. Et chaque tag =<employee>= contient un seul tag =<personal>=, un seul tag =<administrative>= qui peut contient =0= ou plusieurs tags =<uplift>=. Le tag =<employee>= peut aussi avoir =0= ou plusieurs tags de type =<diploma>=, =<medicalcertif>= et =<repayment>=.\\

    Voici la signification de chaque tag des tags déclaré ci-dessus:

+ =<Employee>= :: le root-tag, qui contient les tags =employee=
+ =<employee>= :: contient tout les information d'un employée particulier est il avais deux attributes:
+ *reference* identifiant du employée
+ *departement* département du employée. Certains employée n'appartient à aucun département. Ce sont des /fonctionnaire/
+ =<personal>= :: contient des informations personnelle comme le /nom/, /prénom/, /date de naissance/, etc.
+ =<administrative>= :: contient des informations administrative comme le /SOM/, /CIN/, etc.
+ =<uplift>= :: contient les informations des avancements dans le grade, /date/, /indice/, /échelon/ et /échelle/. Ce tag avais un seul attribut.
+ *id* identifiant du avancement par rapport au avancement précédant
+ =<diploma>= :: contient les informations sur les diplômes, /titre/, /mention/, /institue/ et /session/. Ce tag a aussi un seul attribue, ainsi que l'enfant =<title>=.
+ *id* identifiant du diplôme
+ *mention* la mention du diplôme (dans le tag =<title>=)
+ =<medicalcertif>= :: contient les informations sur certification médical, /date du certification/, /durée/ et /la période/.
+ *id* identifiant du certification médical.
+ =<repayment>= :: contient les informations sur les remboursements, /la période/, /nombre des jours à rembourser/ et /nombre des jours déjà remboursé/
+ *id* identifiant du remboursement

*** Schéma général du fichier
   #+CAPTION: Schéma général =XML= du fichier =data/xml/hr.xml=
   #+NAME: lis:hr-xml
   #+BEGIN_SRC xml -n
     <Employee>			<!--root-->
       <employee reference="" department="">

	 <notes />			 <!--les note sur l'employé-->

	 <personal>			 <!--les information personnelles-->
	 </personal>

	 <administrative>		<!--les information administrative-->
	   <uplift id="" state="">	<!--les information d'avancement-->
	   </uplift>

	   <uplift id="" state="" />	<!--nous pouvons avoir plus-->
	 </administrative>

	 <diplomas id="">		<!--les infomration du diplôme-->
	 </diplomas>
	 <diplomas id="" />		<!--nous pouvons avoir plus-->

	 <medicalcertif id="">	<!--information du certification médical-->
	 </medicalcertif>
	 <medicalcertif id="" />	<!--nous pouvons avoir plus-->

	 <repayment id="">		<!--information du remboursement-->
	 </repayment>
	 <repayment id="" />

       </employee>
     </Employee>
   #+END_SRC

** Diag. UML des Classes
   Le code source de l'application est diviser en 4 packages pricipales, [[Package =model=][=model=]], [[Package =app=][=app=]], [[Package =wins=][=wins=]] et [[Package =views=][=views=]].

   #+CAPTION: Aperçu de code source du projet
   #+NAME:   fig:overview 
   #+ATTR_LATEX: :width 10cm :center t
   [[./diags/Overview.png]]
   
   #+LATEX: \clearpage
*** Package =model=

    Ce package contient les modèles de l'application, ce sont des classes =Java= pour modéliser les informations stockée dans le fichier xml =data/xml/hr.xml= decris [[Stockage des données en XML][ici]].

    #+CAPTION: La relation entre les classes du pkg [[Package =model=][=model=]] et la classe abstrait =XmlElement= du pkg [[Package =app.utils=][=app.utils=]]
    #+NAME:   fig:models
    #+ATTR_LATEX: :width 14cm :center t
    [[./diags/OverviewOnClasses.png]]

    Les classes implémentent les méthodes abstrais =getElement()=, =add()=, =update()= =remove()= dans la classe générique =XmlElement=. Ces méthodes sont responsables de la selection, l'ajout, la mise à jour et la suppression du tag correspondant a l'objet concerné dans le [[Stockage des donn%C3%A9es en XML][fichier xml]]. \\

    Voici la classe mère de toutes les classes, =XmlElement=, qui contient en addition, une chaine de caractères qui représente le référence de l'employée, c.-à-d. L'identifient
 
    #+CAPTION: Extrais du classe générique =XmlElement= du pkg [[Package =app.utils=][=app.utils=]]
    #+NAME: lis:xml-element
    #+BEGIN_SRC java -n
      import org.jdom2.Element;

      public abstract class XmlElement<T> {
	  public abstract boolean add();
	  public abstract boolean update(T updated);
	  public abstract boolean remove();
	  public abstract Element getElement();

	  /* référence du employée */
	  protected String empl_ref;
	  public String getEmployeeReference( ) {
	      return empl_ref;
	  }

	  public void setEmployeeReference(String ref) {
	      this.empl_ref = ref;
	  }
      }
    #+END_SRC

    Les méthodes =add()=, =update()= et =remove()= de =XmlElement= retourne une valeur booléen, qui signifie est ce que l'opération a réussi ou non. Tandis que =getElement()= retourne le tag =XML= correspondant a l'objet.\\

    La raison pour laquelle la classe est générique, c'est que =update()= doit l'être. La méthode =update()= prend un variable de type =T=, ce type est décris avec un héritage du classe =XmlElement=. \\

    Par exemple, =update()= dans la classe =Diploma= est la suivant :

    #+CAPTION: Extrais du classe =Diploma= qui montre l'héritage de =XmlElement=
    #+NAME: lis:diploma
    #+BEGIN_SRC java  -n
      public class Diploma exstends XmlElement<Diploma> {
	  /* les attributs du classe */

	  @Override
	  public boolean update(Diploma updated) {
	      /* process la mise à jour */
	  }
      }
    #+END_SRC
 
*** Package =app=
    le package =app= contient que les enumeration, decris dans le figure [[fig:app]].

    + =Cadre= :: represente les candres possible pour un employee/fonctionnaire
    + =Mention= :: les mentions possible pour un diplome
    + =Period= :: les different period utilise dans l'application
    + =Holiday= :: utilise dans 
    + =SearchField= ::
    + =EmployeeType= ::
    + =Files= :: 

    #+CAPTION: Les enumeration dans pkg =app=
    #+NAME:   fig:app 
    #+ATTR_LATEX: :width 14cm :center t
    [[./diags/OverviewOnApp.png]]

*** Package =app.utils=
    #+CAPTION: La relation entre =JTable=, =TableListener=, et =Printer= du pkg =app.utils=
    #+NAME:   fig:apputils0 
    #+ATTR_LATEX: :width 14cm :center t
    [[./diags/OverviewAppUtils0.png]]

    #+CAPTION: La relation entre =DateUtils=, =XmlFile= et =XmlElement=
    #+NAME:   fig:apputils1 
    #+ATTR_LATEX: :width 14cm :center t
    [[./diags/OverviewAppUtils1.png]]

* L'Interface Graphique
** La relation entre les différent classe graphique

   \vspace*{\fill}
   #+CAPTION: Aperçu général sur les interfaces graphiques utilisé dans l'application
   #+NAME: fig:gui
   [[./diags/OverviewOnWinsAnd.png]]
   \vspace*{\fill}

#+LATEX: \clearpage

*** Package =wins=
**** La fenêtre principale =MainWin.Java=

     #+CAPTION: Aperçu sur le démarrage de l'application
     #+NAME:   fig:mainwin-main
     #+ATTR_LATEX: :width 14cm :center t
     [[./diags/MainWin.png]]

     #+CAPTION: Aperçu sur la génération d'un congé
     #+NAME:   fig:mainwin-holiday
     #+ATTR_LATEX: :width 14cm :center t
     [[./diags/MainWinVac.png]]

**** La fenêtre de suivi des avancements de grade

     #+CAPTION: Aperçu sur le suivi des avancements de grade
     #+NAME:   fig:uplifts-win
     #+ATTR_LATEX: :width 14cm :center t
     [[./diags/UpliftsWin.png]]


*** Package =wins.crud=

**** Gestion des Employées

     
     #+CAPTION: Aperçu sur le suivi des avancements de grade
     #+NAME:   fig:uplifts-win
     #+ATTR_LATEX: :width 14cm :center t
     [[./diags/InfoWin.png]]


**** Gestion de Diplômes

**** Gestion des Certifications Médical

**** Gestion des Grades

*** Package =views=



* Dependencies
  # + Java/XML :: [[https://fr.wikibooks.org/wiki/Programmation_Java/XML][{1}]] [[https://cynober.developpez.com/tutoriel/java/xml/jdom/][{2}]]
  + JDOM :: http://jdom.org/ Java library to to parse XML
  + WebLaF :: [[http://weblookandfeel.com/]] Java library to enhance the look and feel
