#+TITLE: Informatiser le service Ressources Humaines
#+AUTHOR: Rchid Anas

# Antibes Boadilla Frankfurt Juanlespins
# Montpellier Singapore Bergen Copenhagen
# Goettingen Madrid Malmoe Rochester
# Pittsburgh Berlin Dresden Ilmenau Marburg
# Paloalto Warsaw Berkeley Darmstadt Hannover

#+STARTUP: beamer
#+LaTeX_CLASS_OPTIONS: [a4paper,twoside]
#+LaTeX_CLASS_OPTIONS: [captions=tableheading]
#+LATEX_HEADER: \usetheme{Frankfurt}
#+LATEX_HEADER: \usecolortheme{whale}
#+LATEX_HEADER: \usepackage[margin=0.85in]{geometry}
#+LaTeX_CLASS: beamer
# #+MACRO: BEAMERMODE presentation
# #+MACRO: BEAMERTHEME Antibes
# #+MACRO: BEAMERCOLORTHEME lily
# #+MACRO: BEAMERSUBJECT RMRF
# #+MACRO: BEAMERINSTITUTE Miskatonic University, Astrology Dept.
# #+BEAMER_HEADER: \title[short title]{long title}
# #+LaTeX_HEADER: \hypersetup {
# #+LaTeX_HEADER:	    colorlinks,
# #+LaTeX_HEADER:	    citecolor=black,
# #+LaTeX_HEADER:	    filecolor=black,
# #+LaTeX_HEADER:	    linkcolor=gray,
# #+LaTeX_HEADER:	    urlcolor=gray
# #+LaTeX_HEADER: }
#+LATEX_COMPILER: pdflatex

#+OPTIONS:   H:2 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+BEAMER_FRAME_LEVEL: 2
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+LaTeX_HEADER: \usemintedstyle{default}
#+OPTIONS: toc:nil
#+OPTIONS: author:t date:nil
#+LATEX: \tableofcontents
#+LATEX: \clearpage

* Introduction
** Introduction

   #+BEGIN_QUOTE
   Ce projet est le résultat d'un stage que j'avais passé chez la /Faculté des Lettres et Science Humaines/, El Jadida sous le thème /Informatiser le service Ressources Humaines/. Sous l'encadrement de Mr. A. Madani, et la supervision du chef de service; Mr. Driss Dibaji.\\
   #+END_QUOTE

* Cahier des Charges
** Cahier des Charges
   Un service qui est responsable de la gestion des employés et fonctionnaires, leurs diplômes et grades...\\
   \pause

   #+BEGIN_QUOTE
   + Implémenter un système de gestion des employés/fonctionnaires \pause
   + Gérer les diplômes et les grades \pause
   + Suivi des grades \pause
   + Suivi d'absence \pause
   + Suivi de rémunération du travail les fériés \pause
   + Générer des attestations de travail \pause
   + Générer des autorisations de congé \pause
   + Générer des fiches de notation annuelle
   #+END_QUOTE

* Conception
** Conception
*** Stockage des données en XML

    \pause
    Les données sont stockées dans un fichier =XML=; \pause *puisqu'il est lisible à la fois par la machine et l'humain*.\\

    \pause\\

    #+BEGIN_QUOTE
    + Le root-tag est =<Employee>= et qui contient *=0= ou plusieurs* tags de type =<employee>= qui représente des employées. \\
    \pause
    + Chaque tag =<employee>= contient *un seul* tag =<personal>= et *un seul* tag =<administrative>= qui peut contient *=0= ou plusieurs* tags =<uplift>=. \\
    \pause
    + Le tag =<employee>= peut aussi avoir *=0= ou plusieurs* tags de type =<diploma>=, =<medicalcertif>= et =<repayment>=.\\
    #+END_QUOTE

** Les Paquets et leurs Classes
   #+LATEX: \clearpage

   Le code source de l'application est divisé en 4 paquets pricipales: \pause

   + =model= :: contient les différentes classe pour mobilisé les donnée en objet \pause
   + =app= :: contient les différentes énumération utilisées dans l'application. \pause Ce paquet contient aussi  =app.utils=, qui contient des utilitaires utiles pour le développement, notamment la gestion du *fichier XML* \pause
   + =wins= :: contient des interfaces graphiques, y compris celles qui sont responsables des opérations CRUD normales qui existent dans =wins.crud= \pause
   + =views= :: contient des pages générées pour l'impression.

** Paquet =app=
    Ce paquet contient que les énumérations \pause
    #+ATTR_LATEX: :width 7cm :center t
    [[./diags/OverviewOnApp.png]]
** Paquet =app.utils=
   Ce paquet contient des classes important pour l'application. \pause
    #+ATTR_LATEX: :width 9cm :center t
    [[./diags/OverviewAppUtils0.png]]
** La classe =Printer=
   #+BEGIN_QUOTE
   La classe =Printer= est responsable de l'impression d'un =Component= (la classe des composants graphiques) avec l'aide de la méthode =static doPrint()= qui prend un =Component= comme paramètre.
   #+END_QUOTE
   \pause

*** Example de l'appel
   #+BEGIN_SRC java
     import app.utils.Printer;

     Printer.doPrint(/* le composant graphique */);
   #+END_SRC
   \pause
*** Implementation de l'interface =java.awt.Printable=

#+BEGIN_QUOTE
   Aussi, =Printer= a une implémentation de la méthode abstrait =print()= de l'interface =Printable=
#+END_QUOTE

** Exsrais de la classe
*** L'implementation du =print()=

#+BEGIN_SRC java -n
  public class Printer implements Printable {
      private final Component comp;
      public Printer(Component comp) {
	  this.comp = comp;
      }
      @Override
      public int print(Graphics g, PageFormat format,
		       int page_index) {
	  if (page_index > 0)
	      return Printable.NO_SUCH_PAGE;
	  /* ... */
	  return Printable.PAGE_EXISTS;
      }
  }
#+END_SRC
** Paquet =model=

   #+ATTR_LATEX: :width 11cm :center t
   [[./diags/classes.png]]

** La classe =XmlElement=
   #+ATTR_LATEX: :width 5cm :center t
   #+BEGIN_SRC java -n
      public abstract class XmlElement<T> {
	  public abstract boolean add();
	  public abstract boolean update(T updated);
	  public abstract boolean remove();
	  public abstract Element getElement();

	  /* référence du employé */
	  protected String empl_ref;
	  public String getEmployeeReference( ) {
	      return empl_ref;
	  }

	  public void setEmployeeReference(String ref) {
	      this.empl_ref = ref;
	  }
      }
   #+END_SRC

** Héritage de la classe =XmlElement=

   #+BEGIN_QUOTE
   La méthode =update()= prend un variable de type =T=,\pause ce type est décrit avec un héritage de la classe =XmlElement= \pause
   #+END_QUOTE

   #+NAME: lis:diploma
   #+BEGIN_SRC java  -n
      public class Diploma extends XmlElement<Diploma> {
	  /* les attributs du classe */
	  @Override
	  public boolean update(Diploma updated) {
	      try {
		  /* process la mise à jour */
		  return true;
	      } catch (Exception e) {
		  System.err.println(e.getMessage());
		  return false;
	      }
	  }
      }
   #+END_SRC
* L’Interface Graphique
** L’Interface Graphique
*** La relation entre les différents Paquets graphiques
* Dépendances
